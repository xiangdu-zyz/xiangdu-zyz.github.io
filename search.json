[{"title":"C++学习（一）：引用","path":"/2023/12/22/C-学习（一）：引用/","content":"本系列文章是通过学习b战上黑马C++教学而写，记录自己的学习过程 1.引用的基本使用：作用：给变量取别名语法：数据类型 &amp;别名 &#x3D; 原名本质：一个常量指针示例： 123456789101112131415#include &lt;iostream&gt;using namespace std; int main()&#123;\tint a = 10;\tint&amp; b = a;\tcout &lt;&lt; a &lt;&lt; endl;\tcout &lt;&lt; b &lt;&lt; endl;\tb = 100;\tcout &lt;&lt; a &lt;&lt; endl;\tcout &lt;&lt; b &lt;&lt; endl; return 0;&#125; 结果： 此时对b进行操作也会改变a的值 2.引用的注意事项：引用时必须初始化，在初始化后不能改变引用 未定义的示例： 12345678910111213141516#include &lt;iostream&gt;using namespace std; int main()&#123;\tint a = 10;\tint&amp; b = a;\tint&amp; c;\tcout &lt;&lt; a &lt;&lt; endl;\tcout &lt;&lt; b &lt;&lt; endl;\tb = 100;\tcout &lt;&lt; a &lt;&lt; endl;\tcout &lt;&lt; b &lt;&lt; endl; return 0;&#125; 结果： 此时编译器告诉我们c必须初始化 ##3.引用进行函数参数： 作用：利用函数参数传递为值拷贝，来进行值传递，可以在函数里对函数参数进行改变，简化指针修改实参 示例： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#include &lt;iostream&gt;using namespace std; void swap1(int a, int b);void swap2(int* a, int* b);void swap3(int&amp; a, int&amp; b);void prit(int a, int b); int main()&#123;\tint a = 10;\tint b = 20; swap1(a, b);\tprit(a, b); swap2(&amp;a, &amp;b);\tprit(a, b); swap3(a, b);\tprit(a, b); return 0;&#125; void swap1(int a, int b)&#123;\tint c = a;\tb = a;\ta = b;&#125;void swap2(int* a, int* b)&#123;\tint c = *a;\t*a = *b;\t*b = c;&#125;void swap3(int&amp; a, int&amp; b)&#123;\tint c = a;\ta = b;\tb = c;&#125;void prit(int a, int b)&#123;\tcout &lt;&lt; a &lt;&lt; endl;\tcout &lt;&lt; b &lt;&lt; endl;&#125; 结果： 4.引用作为返回值:注意：不能返回局部变量引用示例： 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;iostream&gt;using namespace std; void prit(int a, int b);int&amp; text01();int&amp; text02(); int main()&#123;\tint&amp; d = text01();\tcout &lt;&lt; d &lt;&lt; endl;\tcout &lt;&lt; &amp;d &lt;&lt; endl;\tcout &lt;&lt; &amp;d &lt;&lt; endl;\tcout &lt;&lt; d &lt;&lt; endl; int&amp; b = text02();\tcout &lt;&lt; b &lt;&lt; endl;\ttext02() = 1000;\tcout &lt;&lt; b &lt;&lt; endl; return 0;&#125; int&amp; text01()&#123;\tint a = 20;\treturn a;&#125;int&amp; text02()&#123;\tstatic int c = 10;\treturn c;&#125;void prit(int a, int b)&#123;\tcout &lt;&lt; a &lt;&lt; endl;\tcout &lt;&lt; b &lt;&lt; endl;&#125; 结果： 我这里可能被编译器优化了，并没有像视频那样出现乱码text02() &#x3D; 1000;应该在工作的时候没人写吧……. 5.常量引用：作用：用来修饰形参，防止误操作 示例： 12345678910111213141516171819#include &lt;iostream&gt;using namespace std; void showValue(const int&amp; v) &#123;\t//v += 10;\tcout &lt;&lt; v &lt;&lt; endl;&#125;int main() &#123;\t//int&amp; ref = 10; 引用本身需要一个合法的内存空间，因此这行错误\t//加入const就可以了，编译器优化代码，int temp = 10; const int&amp; ref = temp;\tconst int&amp; ref = 10;\t//ref = 100; //加入const后不可以修改变量\tcout &lt;&lt; ref &lt;&lt; endl;\t//函数中利用常量引用防止误操作修改实参\tint a = 10;\tshowValue(a); return 0;&#125;","tags":["C++"],"categories":["C++"]}]